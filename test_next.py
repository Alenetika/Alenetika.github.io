#!/usr/bin/env python3
"""
ASCII Viewer - —Ä–∞–±–æ—Ç–∞–µ—Ç –±–µ–∑ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –ø–∞–∫–µ—Ç–æ–≤!
–ò—Å–ø–æ–ª—å–∑—É–µ—Ç —Ç–æ–ª—å–∫–æ Tkinter –∏ PIL (–∫–æ—Ç–æ—Ä—ã–π –æ–±—ã—á–Ω–æ —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω)
"""

import tkinter as tk
from tkinter import filedialog, messagebox
import sys
import os

try:
    from PIL import Image, ImageFilter, ImageEnhance

    PIL_AVAILABLE = True
except ImportError:
    PIL_AVAILABLE = False
    print("PIL –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º —É–ø—Ä–æ—â–µ–Ω–Ω—ã–π —Ä–µ–∂–∏–º")

try:
    import numpy as np

    NUMPY_AVAILABLE = True
except ImportError:
    NUMPY_AVAILABLE = False
    print("NumPy –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º —É–ø—Ä–æ—â–µ–Ω–Ω—ã–π —Ä–µ–∂–∏–º")


class ASCIIViewer:
    def __init__(self, image_path=None):
        self.root = tk.Tk()
        self.root.title("ASCII Art Viewer - –ü–æ–ª–Ω—ã–π —ç–∫—Ä–∞–Ω")
        self.root.attributes('-fullscreen', True)
        self.root.configure(bg='black')

        # –û—Å–Ω–æ–≤–Ω–æ–π —Ç–µ–∫—Å—Ç–æ–≤—ã–π –≤–∏–¥–∂–µ—Ç
        self.text_widget = tk.Text(
            self.root,
            font=('Courier New', self.font_size),
            bg='black',
            fg='green',
            wrap=tk.NONE,
            insertbackground='green',
            borderwidth=0,
            highlightthickness=0
        )

        # –ü—Ä–æ–∫—Ä—É—Ç–∫–∞
        scroll_y = tk.Scrollbar(self.root, orient=tk.VERTICAL, command=self.text_widget.yview)
        scroll_x = tk.Scrollbar(self.root, orient=tk.HORIZONTAL, command=self.text_widget.xview)

        self.text_widget.configure(yscrollcommand=scroll_y.set, xscrollcommand=scroll_x.set)

        # –†–∞–∑–º–µ—â–µ–Ω–∏–µ
        self.text_widget.pack(side=tk.LEFT, fill=tk.BOTH, expand=True)
        scroll_y.pack(side=tk.RIGHT, fill=tk.Y)
        scroll_x.pack(side=tk.BOTTOM, fill=tk.X)

        # –ü–∞–ª–∏—Ç—Ä–∞ —Å–∏–º–≤–æ–ª–æ–≤
        self.ascii_chars = ["@", "#", "S", "%", "?", "*", "+", ";", ":", ",", "."]
        self.colors = ['green', 'white', '#FFBF00', 'cyan', 'magenta']
        self.current_color = 0

        # –ë–∏–Ω–¥—ã –∫–ª–∞–≤–∏—à
        self.root.bind('<Escape>', lambda e: self.root.quit())
        self.root.bind('<c>', lambda e: self.change_color())

        # –ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        if image_path and os.path.exists(image_path):
            self.load_image(image_path)
        else:
            # –ï—Å–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ —É–∫–∞–∑–∞–Ω–æ –∏–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
            self.show_test_image()

    def show_test_image(self):
        """–ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ (–≥–µ–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∏–µ —Ñ–∏–≥—É—Ä—ã)"""
        test_ascii = """
        ‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
        ‚ïë                     ASCII ART VIEWER                        ‚ïë
        ‚ïë                                                              ‚ïë
        ‚ïë    ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà    ‚ïë
        ‚ïë    ‚ñà                                                ‚ñà    ‚ïë
        ‚ïë    ‚ñà          –¢–ï–°–¢–û–í–û–ï –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–ï                 ‚ñà    ‚ïë
        ‚ïë    ‚ñà                                                ‚ñà    ‚ïë
        ‚ïë    ‚ñà    ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ    ‚ñà    ‚ïë
        ‚ïë    ‚ñà    ‚ñà                                    ‚ñà    ‚ñà    ‚ïë
        ‚ïë    ‚ñà    ‚ñà           –ü–†–Ø–ú–û–£–ì–û–õ–¨–ù–ò–ö            ‚ñà    ‚ñà    ‚ïë
        ‚ïë    ‚ñà    ‚ñà                                    ‚ñà    ‚ñà    ‚ïë
        ‚ïë    ‚ñà    ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ    ‚ñà    ‚ïë
        ‚ïë    ‚ñà                                                ‚ñà    ‚ïë
        ‚ïë    ‚ñà          ‚óã‚óã‚óã‚óã‚óã‚óã‚óã‚óã‚óã‚óã‚óã‚óã‚óã‚óã‚óã‚óã‚óã‚óã‚óã‚óã‚óã‚óã‚óã‚óã             ‚ñà    ‚ïë
        ‚ïë    ‚ñà        ‚óã‚óã                    ‚óã‚óã             ‚ñà    ‚ïë
        ‚ïë    ‚ñà        ‚óã‚óã        –ö–†–£–ì        ‚óã‚óã             ‚ñà    ‚ïë
        ‚ïë    ‚ñà        ‚óã‚óã                    ‚óã‚óã             ‚ñà    ‚ïë
        ‚ïë    ‚ñà          ‚óã‚óã‚óã‚óã‚óã‚óã‚óã‚óã‚óã‚óã‚óã‚óã‚óã‚óã‚óã‚óã‚óã‚óã‚óã‚óã‚óã‚óã‚óã‚óã             ‚ñà    ‚ïë
        ‚ïë    ‚ñà                                                ‚ñà    ‚ïë
        ‚ïë    ‚ñà    ‚ï±‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ï≤    ‚ñà    ‚ïë
        ‚ïë    ‚ñà    ‚ï≤    –¢–†–ï–£–ì–û–õ–¨–ù–ò–ö              ‚ï±    ‚ñà    ‚ïë
        ‚ïë    ‚ñà        ‚ï≤                    ‚ï±        ‚ñà    ‚ïë
        ‚ïë    ‚ñà            ‚ï≤            ‚ï±            ‚ñà    ‚ïë
        ‚ïë    ‚ñà                ‚ï≤    ‚ï±                ‚ñà    ‚ïë
        ‚ïë    ‚ñà                    ‚ñº                    ‚ñà    ‚ïë
        ‚ïë    ‚ñà                                                ‚ñà    ‚ïë
        ‚ïë    ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà    ‚ïë
        ‚ïë                                                              ‚ïë
        ‚ïë        –ù–∞–∂–º–∏—Ç–µ ESC –¥–ª—è –≤—ã—Ö–æ–¥–∞, C –¥–ª—è —Å–º–µ–Ω—ã —Ü–≤–µ—Ç–∞             ‚ïë
        ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
        """
        self.text_widget.insert(1.0, test_ascii)

    def change_color(self, event=None):
        """–°–º–µ–Ω–∞ —Ü–≤–µ—Ç–∞ —Ç–µ–∫—Å—Ç–∞"""
        self.current_color = (self.current_color + 1) % len(self.colors)
        color = self.colors[self.current_color]
        self.text_widget.config(fg=color, insertbackground=color)

    def load_image(self, image_path):
        """–ó–∞–≥—Ä—É–∑–∫–∞ –∏ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è"""
        try:
            if not PIL_AVAILABLE:
                messagebox.showerror("–û—à–∏–±–∫–∞", "PIL –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: pip install pillow")
                return

            self.text_widget.delete(1.0, tk.END)
            self.text_widget.insert(1.0, "üîÑ –ó–∞–≥—Ä—É–∂–∞–µ–º –∏ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ...")
            self.root.update()

            ascii_art = self.convert_to_ascii(image_path)

            self.text_widget.delete(1.0, tk.END)
            self.text_widget.insert(1.0, ascii_art)

        except Exception as e:
            messagebox.showerror("–û—à–∏–±–∫–∞", f"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ:\n{str(e)}")
            self.show_test_image()

    def convert_to_ascii(self, image_path):
        """–ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ ASCII"""
        img = Image.open(image_path).convert('L')

        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–∞–∑–º–µ—Ä—ã —ç–∫—Ä–∞–Ω–∞
        screen_width = self.root.winfo_screenwidth()
        screen_height = self.root.winfo_screenheight()

        # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ
        width, height = img.size
        aspect_ratio = height / width

        # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∏–º–≤–æ–ª–æ–≤
        max_chars_x = min(200, screen_width // 6)  # 6px –Ω–∞ —Å–∏–º–≤–æ–ª
        max_chars_y = min(100, screen_height // 12)  # 12px –Ω–∞ —Å–∏–º–≤–æ–ª

        new_width = min(max_chars_x, width)
        new_height = int(new_width * aspect_ratio * 0.55)

        if new_height > max_chars_y:
            new_height = max_chars_y
            new_width = int(new_height / (aspect_ratio * 0.55))

        img = img.resize((new_width, new_height), Image.LANCZOS)

        # –£–ª—É—á—à–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        img = img.filter(ImageFilter.SHARPEN)
        enhancer = ImageEnhance.Contrast(img)
        img = enhancer.enhance(1.3)

        # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ ASCII
        if NUMPY_AVAILABLE:
            pixels = np.array(img)
            ascii_str = ""
            for y in range(pixels.shape[0]):
                for x in range(pixels.shape[1]):
                    brightness = pixels[y, x]
                    index = int(brightness / 255 * (len(self.ascii_chars) - 1))
                    ascii_str += self.ascii_chars[index]
                ascii_str += "\n"
        else:
            # –£–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è –±–µ–∑ numpy
            pixels = list(img.getdata())
            ascii_str = ""
            for i in range(new_height):
                for j in range(new_width):
                    brightness = pixels[i * new_width + j]
                    index = int(brightness / 255 * (len(self.ascii_chars) - 1))
                    ascii_str += self.ascii_chars[index]
                ascii_str += "\n"

        return ascii_str

    def run(self):
        """–ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
        self.root.mainloop()


def check_dependencies():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"""
    missing = []

    try:
        import PIL
    except ImportError:
        missing.append("pillow (PIL)")

    if missing:
        print("‚ö†Ô∏è  –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–∞–∫–µ—Ç—ã:", ", ".join(missing))
        print("üì¶ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: pip install pillow")
        return False
    return True


if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ ASCII Viewer...")
    print("üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...")

    # –£–ö–ê–ñ–ò–¢–ï –ü–£–¢–¨ –ö –í–ê–®–ï–ú–£ –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–Æ –ó–î–ï–°–¨
    IMAGE_PATH = "–ø—Ä–æ–±–∞.jpg"  # ‚Üê –ò–ó–ú–ï–ù–ò–¢–ï –≠–¢–£ –°–¢–†–û–ö–£

    if check_dependencies():
        print("‚úÖ –í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –¥–æ—Å—Ç—É–ø–Ω—ã!")
        viewer = ASCIIViewer(IMAGE_PATH)
        viewer.run()
    else:
        print("‚ùå –ù–µ –≤—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
        input("–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞...")